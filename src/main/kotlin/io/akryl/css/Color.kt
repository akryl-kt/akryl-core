@file:Suppress("EnumEntryName", "unused", "SpellCheckingInspection")

package io.akryl.css

class Color(val value: String) {
  companion object {
    val initial = Color("initial")
    val inherit = Color("inherit")
    val unset = Color("unset")

    val transparent = Color("transparent")
    val currentColor = Color("currentColor")

    // W3C predefined HTML colors (147), see the referenced specification above.
    val aliceBlue = Color("aliceblue")
    val antiqueWhite = Color("antiquewhite")
    val aqua = Color("aqua")
    val aquamarine = Color("aquamarine")
    val azure = Color("azure")
    val beige = Color("beige")
    val bisque = Color("bisque")
    val black = Color("black")
    val blanchedAlmond = Color("blanchedalmond")
    val blue = Color("blue")
    val blueViolet = Color("blueviolet")
    val brown = Color("brown")
    val burlyWood = Color("burlywood")
    val cadetBlue = Color("cadetblue")
    val chartreuse = Color("chartreuse")
    val chocolate = Color("chocolate")
    val coral = Color("coral")
    val cornflowerBlue = Color("cornflowerblue")
    val cornsilk = Color("cornsilk")
    val crimson = Color("crimson")
    val cyan = Color("cyan")
    val darkBlue = Color("darkblue")
    val darkCyan = Color("darkcyan")
    val darkGoldenrod = Color("darkgoldenrod")
    val darkGray = Color("darkgray")
    val darkGreen = Color("darkgreen")
    val darkGrey = Color("darkgrey")
    val darkKhaki = Color("darkkhaki")
    val darkMagenta = Color("darkmagenta")
    val darkOliveGreen = Color("darkolivegreen")
    val darkOrange = Color("darkorange")
    val darkOrchid = Color("darkorchid")
    val darkRed = Color("darkred")
    val darkSalmon = Color("darksalmon")
    val darkSeaGreen = Color("darkseagreen")
    val darkSlateBlue = Color("darkslateblue")
    val darkSlateGray = Color("darkslategray")
    val darkSlateGrey = Color("darkslategrey")
    val darkTurquoise = Color("darkturquoise")
    val darkViolet = Color("darkviolet")
    val deepPink = Color("deeppink")
    val deepSkyBlue = Color("deepskyblue")
    val dimGray = Color("dimgray")
    val dimGrey = Color("dimgrey")
    val dodgerBlue = Color("dodgerblue")
    val firebrick = Color("firebrick")
    val floralWhite = Color("floralwhite")
    val forestGreen = Color("forestgreen")
    val fuchsia = Color("fuchsia")
    val gainsboro = Color("gainsboro")
    val ghostWhite = Color("ghostwhite")
    val gold = Color("gold")
    val goldenrod = Color("goldenrod")
    val gray = Color("gray")
    val green = Color("green")
    val greenYellow = Color("greenyellow")
    val grey = Color("grey")
    val honeydew = Color("honeydew")
    val hotPink = Color("hotpink")
    val indianRed = Color("indianred")
    val indigo = Color("indigo")
    val ivory = Color("ivory")
    val khaki = Color("khaki")
    val lavender = Color("lavender")
    val lavenderBlush = Color("lavenderblush")
    val lawnGreen = Color("lawngreen")
    val lemonChiffon = Color("lemonchiffon")
    val lightBlue = Color("lightblue")
    val lightCoral = Color("lightcoral")
    val lightCyan = Color("lightcyan")
    val lightGoldenrodYellow = Color("lightgoldenrodyellow")
    val lightGray = Color("lightgray")
    val lightGreen = Color("lightgreen")
    val lightGrey = Color("lightgrey")
    val lightPink = Color("lightpink")
    val lightSalmon = Color("lightsalmon")
    val lightSeaGreen = Color("lightseagreen")
    val lightSkyBlue = Color("lightskyblue")
    val lightSlateGray = Color("lightslategray")
    val lightSlateGrey = Color("lightslategrey")
    val lightSteelBlue = Color("lightsteelblue")
    val lightYellow = Color("lightyellow")
    val lime = Color("lime")
    val limeGreen = Color("limegreen")
    val linen = Color("linen")
    val magenta = Color("magenta")
    val maroon = Color("maroon")
    val mediumAquamarine = Color("mediumaquamarine")
    val mediumBlue = Color("mediumblue")
    val mediumOrchid = Color("mediumorchid")
    val mediumPurple = Color("mediumpurple")
    val mediumSeaGreen = Color("mediumseagreen")
    val mediumSlateBlue = Color("mediumslateblue")
    val mediumSpringGreen = Color("mediumspringgreen")
    val mediumTurquoise = Color("mediumturquoise")
    val mediumVioletRed = Color("mediumvioletred")
    val midnightBlue = Color("midnightblue")
    val mintCream = Color("mintcream")
    val mistyRose = Color("mistyrose")
    val moccasin = Color("moccasin")
    val navajoWhite = Color("navajowhite")
    val navy = Color("navy")
    val oldLace = Color("oldlace")
    val olive = Color("olive")
    val oliveDrab = Color("olivedrab")
    val orange = Color("orange")
    val orangeRed = Color("orangered")
    val orchid = Color("orchid")
    val paleGoldenrod = Color("palegoldenrod")
    val paleGreen = Color("palegreen")
    val paleTurquoise = Color("paleturquoise")
    val paleVioletRed = Color("palevioletred")
    val papayaWhip = Color("papayawhip")
    val peachPuff = Color("peachpuff")
    val peru = Color("peru")
    val pink = Color("pink")
    val plum = Color("plum")
    val powderBlue = Color("powderblue")
    val purple = Color("purple")
    val red = Color("red")
    val rosyBrown = Color("rosybrown")
    val royalBlue = Color("royalblue")
    val saddleBrown = Color("saddlebrown")
    val salmon = Color("salmon")
    val sandyBrown = Color("sandybrown")
    val seaGreen = Color("seagreen")
    val seaShell = Color("seashell")
    val sienna = Color("sienna")
    val silver = Color("silver")
    val skyBlue = Color("skyblue")
    val slateBlue = Color("slateblue")
    val slateGray = Color("slategray")
    val slateGrey = Color("slategrey")
    val snow = Color("snow")
    val springGreen = Color("springgreen")
    val steelBlue = Color("steelblue")
    val tan = Color("tan")
    val teal = Color("teal")
    val thistle = Color("thistle")
    val tomato = Color("tomato")
    val turquoise = Color("turquoise")
    val violet = Color("violet")
    val wheat = Color("wheat")
    val white = Color("white")
    val whiteSmoke = Color("whitesmoke")
    val yellow = Color("yellow")
    val yellowGreen = Color("yellowgreen")
  }

  constructor(value: Int) : this('#' + value.toString(16).padStart(6, '0'))
  constructor(value: Long) : this('#' + value.toString(16).padStart(6, '0'))

  override fun toString() = value
}

fun rgb(red: Int, green: Int, blue: Int) = Color("rgb($red, $green, $blue)")
fun rgba(red: Int, green: Int, blue: Int, alpha: Double) = Color("rgba($red, $green, $blue, $alpha)")
fun hsl(hue: Int, saturation: Int, lightness: Int) = Color("hsl($hue, $saturation%, $lightness%)")
fun hsla(hue: Int, saturation: Int, lightness: Int, alpha: Double) = Color("hsla($hue, $saturation%, $lightness%, $alpha)")