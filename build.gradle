plugins {
    id 'org.jetbrains.kotlin.js' version '1.3.61'
    id 'pl.allegro.tech.build.axion-release' version '1.11.0'
    id "com.jfrog.bintray" version "1.8.4"
}

apply plugin: "maven-publish"

group 'io.akryl'
version scmVersion.version

repositories {
    maven { url = "https://dl.bintray.com/kotlin/kotlin-eap" }
    maven { url = "https://dl.bintray.com/kotlin/kotlin-dev" }
    mavenCentral()
    jcenter()
}

kotlin {
    target {
        browser {
            testTask {
                useKarma {
                    useChromeHeadless()
                }
            }
        }

    }

    sourceSets {
        main {
            dependencies {
                implementation "org.jetbrains.kotlin:kotlin-stdlib-js"

                implementation npm("babel-loader", "8.0.6")
                implementation npm("@babel/core", "7.7.7")
                implementation npm("@babel/preset-env", "7.7.7")
                implementation npm("babel-plugin-akryl", "0.1.1")
                implementation npm("react", "16.12.0")
                implementation npm("react-test-renderer", "16.12.0")
            }
        }
    }
}

dependencies {
    testImplementation "org.jetbrains.kotlin:kotlin-test-js"
}

compileKotlinJs {
    kotlinOptions {
        freeCompilerArgs += "-Xuse-experimental=kotlin.experimental.ExperimentalTypeInference"
    }
}

task sourcesJar(type: Jar) {
    classifier = "sources"
    from "src/main/kotlin"
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId = project.group
            artifactId = project.name
            version = project.version

            from components.kotlin
            artifact sourcesJar
        }
    }
}

artifacts {
    archives sourcesJar
}

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_KEY')
    publications = ['maven']
    dryRun = project.version.endsWith('SNAPSHOT')
    publish = true
    pkg {
        repo = 'akryl'
        name = project.name
        vcsUrl = "https://github.com/akryl-kt/${project.name}.git"
        licenses = ['MIT']
        version {
            name = project.version
            desc = project.name
            released = new Date()
            vcsTag = project.version
        }
    }
}
