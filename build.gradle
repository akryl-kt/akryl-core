buildscript {
    ext.kotlinVersion = "1.3.41"

    repositories {
        jcenter()
        maven { url "https://dl.bintray.com/kotlin/kotlin-eap" }
        maven { url "https://plugins.gradle.org/m2/" }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "org.jetbrains.kotlin:kotlin-frontend-plugin:0.0.45"
        classpath 'com.moowork.gradle:gradle-node-plugin:1.2.0'
    }
}

apply plugin: "kotlin2js"
apply plugin: "org.jetbrains.kotlin.frontend"
apply plugin: "maven"
apply plugin: 'com.moowork.node'

group = "io.akryl"
version = "0.4.0"

repositories {
    jcenter()
    maven { url "https://kotlin.bintray.com/kotlinx" }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-js:$kotlinVersion"
    testCompile "org.jetbrains.kotlin:kotlin-test-js:$kotlinVersion"
}

compileKotlin2Js {
    kotlinOptions {
        metaInfo = true
        sourceMap = true
        moduleKind = "commonjs"
        main = "nocall"
    }
}

compileTestKotlin2Js {
    kotlinOptions {
        metaInfo = true
        sourceMap = true
        moduleKind = "commonjs"
        main = "nocall"
    }
}

kotlinFrontend {
    npm {
        dependency("css-selector-parser", "1.3.0") // todo
        devDependency("mocha")
    }
}

task populateNodeModules(type: Copy) {
    from compileKotlin2Js.destinationDir

    configurations.testCompile.each { from zipTree(it.absolutePath) }
    include '*.js'
    into "${buildDir}/node_modules"
}

task runMocha(type: NodeTask, dependsOn: [compileTestKotlin2Js, populateNodeModules]) {
    script = file("${buildDir}/node_modules/mocha/bin/mocha")
    args = [compileTestKotlin2Js.outputFile]
}